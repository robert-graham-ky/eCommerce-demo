{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  items: [],\n  subtotal: 0,\n  length: 0\n};\nexport function increaseQuantity(itemId) {\n  return {\n    type: \"INCREASE_QUANTITY\",\n    payload: itemId\n  };\n}\nexport function decreaseQuantity(itemId) {\n  return {\n    type: \"DECREASE_QUANTITY\",\n    payload: itemId\n  };\n}\n\nfunction cartReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n\n      if (existingItem) {\n        // Item already exists in cart, so update quantity and subtotal\n        const updatedItems = state.items.map(item => {\n          if (item.id === newItem.id) {\n            return { ...item,\n              quantity: item.quantity + 1\n            };\n          } else {\n            return item;\n          }\n        });\n        const updatedSubtotal = state.subtotal + newItem.price;\n        const updatedLength = state.length + 1;\n        return { ...state,\n          items: updatedItems,\n          subtotal: updatedSubtotal,\n          length: updatedLength\n        };\n      } else {\n        // Item is not in cart, so add it\n        const updatedItems = [...state.items, newItem];\n        const updatedSubtotal = state.subtotal + newItem.price;\n        const updatedLength = state.length + 1;\n        return { ...state,\n          items: updatedItems,\n          subtotal: updatedSubtotal,\n          length: updatedLength\n        };\n      }\n\n    case \"REMOVE_ITEM\":\n      const itemIdToRemove = action.payload;\n      const itemToRemove = state.items.find(item => item.id === itemIdToRemove);\n      const filteredItems = state.items.filter(item => item.id !== itemIdToRemove);\n      const updatedSubtotal = state.subtotal - itemToRemove.price * itemToRemove.quantity;\n      const updatedLength = state.length - itemToRemove.quantity;\n      return { ...state,\n        items: filteredItems,\n        subtotal: updatedSubtotal,\n        length: updatedLength\n      };\n\n    case \"DECREASE_QUANTITY\":\n      const itemIdToDecrease = action.payload;\n      const itemToDecrease = state.items.find(item => item.id === itemIdToDecrease);\n      const decreasedItems = state.items.map(item => {\n        if (item.id === itemIdToDecrease && item.quantity > 1) {\n          return { ...item,\n            quantity: item.quantity - 1\n          };\n        } else {\n          return item;\n        }\n      });\n      const decreasedSubtotal = state.subtotal - itemToDecrease.price;\n      const decreasedLength = state.length - 1;\n      return { ...state,\n        items: decreasedItems,\n        subtotal: decreasedSubtotal,\n        length: decreasedLength\n      };\n\n    case \"INCREASE_QUANTITY\":\n      const itemIdToIncrease = action.payload;\n      const itemToIncrease = state.items.find(item => item.id === itemIdToIncrease);\n      const increasedItems = state.items.map(item => {\n        if (item.id === itemIdToIncrease) {\n          return { ...item,\n            quantity: item.quantity + 1\n          };\n        } else {\n          return item;\n        }\n      });\n      const increasedSubtotal = state.subtotal + itemToIncrease.price;\n      const increasedLength = state.length + 1;\n      return { ...state,\n        items: increasedItems,\n        subtotal: increasedSubtotal,\n        length: increasedLength\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst store = configureStore({\n  reducer: {\n    cart: cartReducer\n  }\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/Graham family/Desktop/Junk General/junk-general/src/cart/CartStore.js"],"names":["configureStore","initialState","items","subtotal","length","increaseQuantity","itemId","type","payload","decreaseQuantity","cartReducer","state","action","newItem","existingItem","find","item","id","updatedItems","map","quantity","updatedSubtotal","price","updatedLength","itemIdToRemove","itemToRemove","filteredItems","filter","itemIdToDecrease","itemToDecrease","decreasedItems","decreasedSubtotal","decreasedLength","itemIdToIncrease","itemToIncrease","increasedItems","increasedSubtotal","increasedLength","store","reducer","cart"],"mappings":"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","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  subtotal: 0,\r\n  length: 0,\r\n};\r\n\r\nexport function increaseQuantity(itemId) {\r\n  return { type: \"INCREASE_QUANTITY\", payload: itemId };\r\n}\r\n\r\nexport function decreaseQuantity(itemId) {\r\n  return { type: \"DECREASE_QUANTITY\", payload: itemId };\r\n}\r\n\r\nfunction cartReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"ADD_ITEM\":\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n\r\n      if (existingItem) {\r\n        // Item already exists in cart, so update quantity and subtotal\r\n        const updatedItems = state.items.map((item) => {\r\n          if (item.id === newItem.id) {\r\n            return { ...item, quantity: item.quantity + 1 };\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        const updatedSubtotal = state.subtotal + newItem.price;\r\n        const updatedLength = state.length + 1;\r\n        return {\r\n          ...state,\r\n          items: updatedItems,\r\n          subtotal: updatedSubtotal,\r\n          length: updatedLength,\r\n        };\r\n      } else {\r\n        // Item is not in cart, so add it\r\n        const updatedItems = [...state.items, newItem];\r\n        const updatedSubtotal = state.subtotal + newItem.price;\r\n        const updatedLength = state.length + 1;\r\n        return {\r\n          ...state,\r\n          items: updatedItems,\r\n          subtotal: updatedSubtotal,\r\n          length: updatedLength,\r\n        };\r\n      }\r\n\r\n    case \"REMOVE_ITEM\":\r\n      const itemIdToRemove = action.payload;\r\n      const itemToRemove = state.items.find(\r\n        (item) => item.id === itemIdToRemove\r\n      );\r\n      const filteredItems = state.items.filter(\r\n        (item) => item.id !== itemIdToRemove\r\n      );\r\n      const updatedSubtotal =\r\n        state.subtotal - itemToRemove.price * itemToRemove.quantity;\r\n      const updatedLength = state.length - itemToRemove.quantity;\r\n      return {\r\n        ...state,\r\n        items: filteredItems,\r\n        subtotal: updatedSubtotal,\r\n        length: updatedLength,\r\n      };\r\n\r\n    case \"DECREASE_QUANTITY\":\r\n      const itemIdToDecrease = action.payload;\r\n      const itemToDecrease = state.items.find(\r\n        (item) => item.id === itemIdToDecrease\r\n      );\r\n      const decreasedItems = state.items.map((item) => {\r\n        if (item.id === itemIdToDecrease && item.quantity > 1) {\r\n          return { ...item, quantity: item.quantity - 1 };\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n      const decreasedSubtotal = state.subtotal - itemToDecrease.price;\r\n      const decreasedLength = state.length - 1;\r\n      return {\r\n        ...state,\r\n        items: decreasedItems,\r\n        subtotal: decreasedSubtotal,\r\n        length: decreasedLength,\r\n      };\r\n\r\n    case \"INCREASE_QUANTITY\":\r\n      const itemIdToIncrease = action.payload;\r\n      const itemToIncrease = state.items.find(\r\n        (item) => item.id === itemIdToIncrease\r\n      );\r\n      const increasedItems = state.items.map((item) => {\r\n        if (item.id === itemIdToIncrease) {\r\n          return { ...item, quantity: item.quantity + 1 };\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n      const increasedSubtotal = state.subtotal + itemToIncrease.price;\r\n      const increasedLength = state.length + 1;\r\n      return {\r\n        ...state,\r\n        items: increasedItems,\r\n        subtotal: increasedSubtotal,\r\n        length: increasedLength,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    cart: cartReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}