{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Graham family\\\\Desktop\\\\Junk General\\\\junk-general\\\\src\\\\signup\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignUp() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch('http://localhost:8000/users/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n\n      if (response.ok) {\n        setMessage(data.message);\n        setEmail('');\n        setPassword('');\n      } else {\n        setMessage(data.error || data.message);\n      }\n    } catch (error) {\n      console.error('Error during signup:', error);\n      setMessage('An error occurred. Please try again.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SignUp\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: typeof message === 'object' ? JSON.stringify(message) : message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUp, \"d0J/XCGznNwJDPwFtxo8Y/0hle4=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/Graham family/Desktop/Junk General/junk-general/src/signup/SignUp.js"],"names":["React","useState","SignUp","email","setEmail","password","setPassword","message","setMessage","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","error","console","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMQ,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,EAAuC;AACjEC,QAAAA,MAAM,EAAE,MADyD;AAEjEC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFwD;AAKjEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEf,UAAAA,KAAF;AAASE,UAAAA;AAAT,SAAf;AAL2D,OAAvC,CAA5B;AAQA,YAAMc,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;;AAEA,UAAIR,QAAQ,CAACS,EAAb,EAAiB;AACfb,QAAAA,UAAU,CAACW,IAAI,CAACZ,OAAN,CAAV;AACAH,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,QAAAA,WAAW,CAAC,EAAD,CAAX;AACD,OAJD,MAIO;AACLE,QAAAA,UAAU,CAACW,IAAI,CAACG,KAAL,IAAcH,IAAI,CAACZ,OAApB,CAAV;AACD;AACF,KAlBD,CAkBE,OAAOe,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACAd,MAAAA,UAAU,CAAC,sCAAD,CAAV;AACD;AACF,GAzBD;;AA2BA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEC,YAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,EAAE,EAAC,OAFL;AAGE,QAAA,KAAK,EAAEN,KAHT;AAIE,QAAA,QAAQ,EAAGO,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACc,MAAF,CAASC,KAAV,CAJ3B;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,EAAE,EAAC,UAFL;AAGE,QAAA,KAAK,EAAEpB,QAHT;AAIE,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,WAAW,CAACI,CAAC,CAACc,MAAF,CAASC,KAAV,CAJ9B;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,cAXF,eAkBE;AAAA;AAAA;AAAA;AAAA,cAlBF,eAmBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAuBGlB,OAAO,iBAAI;AAAA,gBAAI,OAAOA,OAAP,KAAmB,QAAnB,GAA8BU,IAAI,CAACC,SAAL,CAAeX,OAAf,CAA9B,GAAwDA;AAA5D;AAAA;AAAA;AAAA;AAAA,YAvBd;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA3DQL,M;;KAAAA,M;AA6DT,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction SignUp() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8000/users/signup', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setMessage(data.message);\r\n        setEmail('');\r\n        setPassword('');\r\n      } else {\r\n        setMessage(data.error || data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during signup:', error);\r\n      setMessage('An error occurred. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"SignUp\">\r\n      <h2>Sign Up</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <br />\r\n        <label htmlFor=\"password\">Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <br />\r\n        <button type=\"submit\">Sign Up</button>\r\n      </form>\r\n      {message && <p>{typeof message === 'object' ? JSON.stringify(message) : message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}