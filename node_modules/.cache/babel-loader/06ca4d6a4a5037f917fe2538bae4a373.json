{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  items: [],\n  subtotal: 0\n};\n/*function increaseQuantity(itemId) {\r\n  return { type: \"INCREASE_QUANTITY\", payload: itemId };\r\n}\r\n\r\nfunction decreaseQuantity(itemId) {\r\n  return { type: \"DECREASE_QUANTITY\", payload: itemId };\r\n}\r\nconst decreasedItems = [...state.items];\r\nreturn { ...state, items: decreasedItems };\r\n*/\n\nfunction cartReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      // Add the item to the cart items array and update the subtotal\n      const newItem = action.payload;\n      const updatedItems = [...state.items, newItem];\n      const updatedSubtotal = state.subtotal + newItem.price;\n      return { ...state,\n        items: updatedItems,\n        subtotal: updatedSubtotal\n      };\n\n    case \"REMOVE_ITEM\":\n      // Remove the item from the cart items array and update the subtotal\n      const itemIdToRemove = action.payload;\n      const filteredItems = state.items.filter(item => item.id !== itemIdToRemove);\n      const updatedTotal = state.subtotal - state.items.find(item => item.id === itemIdToRemove).price;\n      return { ...state,\n        items: filteredItems,\n        subtotal: updatedTotal\n      };\n\n    case \"DECREASE_QUANTITY\":\n      // Decrease the quantity of the item with the corresponding itemId by 1\n      const itemIdToDecrease = action.payload;\n      const decreasedItems = state.items.map(item => {\n        if (item.id === itemIdToDecrease && item.quantity > 1) {\n          return { ...item,\n            quantity: item.quantity - 1\n          };\n        } else {\n          return item;\n        }\n      });\n      const decreasedSubtotal = state.subtotal - state.items.find(item => item.id === itemIdToDecrease).price;\n      return { ...state,\n        items: decreasedItems,\n        subtotal: decreasedSubtotal\n      };\n\n    case \"INCREASE_QUANTITY\":\n      // Increase the quantity of the item with the corresponding itemId by 1\n      const itemIdToIncrease = action.payload;\n      const increasedItems = state.items.map(item => {\n        if (item.id === itemIdToIncrease) {\n          return { ...item,\n            quantity: item.quantity + 1\n          };\n        } else {\n          return item;\n        }\n      });\n      const increasedSubtotal = state.subtotal + state.items.find(item => item.id === itemIdToIncrease).price;\n      return { ...state,\n        items: increasedItems,\n        subtotal: increasedSubtotal\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst store = configureStore({\n  reducer: {\n    cart: cartReducer\n  }\n}); //export default store;","map":{"version":3,"sources":["C:/Users/Graham family/Desktop/Junk General/junk-general/src/cart/CartStore.js"],"names":["configureStore","initialState","items","subtotal","cartReducer","state","action","type","newItem","payload","updatedItems","updatedSubtotal","price","itemIdToRemove","filteredItems","filter","item","id","updatedTotal","find","itemIdToDecrease","decreasedItems","map","quantity","decreasedSubtotal","itemIdToIncrease","increasedItems","increasedSubtotal","store","reducer","cart"],"mappings":"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","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  subtotal: 0,\r\n};\r\n\r\n/*function increaseQuantity(itemId) {\r\n  return { type: \"INCREASE_QUANTITY\", payload: itemId };\r\n}\r\n\r\nfunction decreaseQuantity(itemId) {\r\n  return { type: \"DECREASE_QUANTITY\", payload: itemId };\r\n}\r\nconst decreasedItems = [...state.items];\r\nreturn { ...state, items: decreasedItems };\r\n*/\r\nfunction cartReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"ADD_ITEM\":\r\n      // Add the item to the cart items array and update the subtotal\r\n      const newItem = action.payload;\r\n      const updatedItems = [...state.items, newItem];\r\n      const updatedSubtotal = state.subtotal + newItem.price;\r\n      return { ...state, items: updatedItems, subtotal: updatedSubtotal };\r\n\r\n    case \"REMOVE_ITEM\":\r\n      // Remove the item from the cart items array and update the subtotal\r\n      const itemIdToRemove = action.payload;\r\n      const filteredItems = state.items.filter(\r\n        (item) => item.id !== itemIdToRemove\r\n      );\r\n      const updatedTotal =\r\n        state.subtotal -\r\n        state.items.find((item) => item.id === itemIdToRemove).price;\r\n      return { ...state, items: filteredItems, subtotal: updatedTotal };\r\n\r\n    case \"DECREASE_QUANTITY\":\r\n      // Decrease the quantity of the item with the corresponding itemId by 1\r\n      const itemIdToDecrease = action.payload;\r\n      const decreasedItems = state.items.map((item) => {\r\n        if (item.id === itemIdToDecrease && item.quantity > 1) {\r\n          return { ...item, quantity: item.quantity - 1 };\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n      const decreasedSubtotal =\r\n        state.subtotal -\r\n        state.items.find((item) => item.id === itemIdToDecrease).price;\r\n      return { ...state, items: decreasedItems, subtotal: decreasedSubtotal };\r\n\r\n    case \"INCREASE_QUANTITY\":\r\n      // Increase the quantity of the item with the corresponding itemId by 1\r\n      const itemIdToIncrease = action.payload;\r\n      const increasedItems = state.items.map((item) => {\r\n        if (item.id === itemIdToIncrease) {\r\n          return { ...item, quantity: item.quantity + 1 };\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n      const increasedSubtotal =\r\n        state.subtotal +\r\n        state.items.find((item) => item.id === itemIdToIncrease).price;\r\n      return { ...state, items: increasedItems, subtotal: increasedSubtotal };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    cart: cartReducer,\r\n  },\r\n});\r\n\r\n//export default store;"]},"metadata":{},"sourceType":"module"}