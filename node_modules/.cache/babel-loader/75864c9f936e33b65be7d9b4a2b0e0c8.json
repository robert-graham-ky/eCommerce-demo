{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  items: [],\n  subtotal: 0,\n  length: 0\n};\nexport function increaseQuantity(itemId) {\n  return {\n    type: \"INCREASE_QUANTITY\",\n    payload: itemId\n  };\n}\nexport function decreaseQuantity(itemId) {\n  return {\n    type: \"DECREASE_QUANTITY\",\n    payload: itemId\n  };\n}\n\nfunction cartReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      // Add the item to the cart items array and update the subtotal\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n\n      if (existingItem) {\n        // If the item already exists, update its quantity and subtotal\n        const updatedItems = state.items.map(item => {\n          if (item.id === existingItem.id) {\n            return { ...item,\n              quantity: item.quantity + 1\n            };\n          } else {\n            return item;\n          }\n        });\n        const updatedSubtotal = state.subtotal + existingItem.price;\n        return { ...state,\n          items: updatedItems,\n          subtotal: updatedSubtotal\n        };\n      } else {\n        // If the item doesn't exist, add it to the cart items array and update the subtotal\n        const updatedItems = [...state.items, newItem];\n        const updatedSubtotal = state.subtotal + newItem.price;\n        return { ...state,\n          items: updatedItems,\n          subtotal: updatedSubtotal\n        };\n      }\n\n    case \"REMOVE_ITEM\":\n      // Remove the item from the cart items array and update the subtotal\n      const itemIdToRemove = action.payload;\n      const filteredItems = state.items.filter(item => item.id !== itemIdToRemove);\n      const updatedTotal = state.subtotal - state.items.find(item => item.id === itemIdToRemove).price;\n      return { ...state,\n        items: filteredItems,\n        subtotal: updatedTotal\n      };\n\n    case \"DECREASE_QUANTITY\":\n      // Decrease the quantity of the item with the corresponding itemId by 1\n      const itemIdToDecrease = action.payload;\n      const decreasedItems = state.items.map(item => {\n        if (item.id === itemIdToDecrease && item.quantity > 1) {\n          return { ...item,\n            quantity: item.quantity - 1\n          };\n        } else {\n          return item;\n        }\n      });\n      const decreasedSubtotal = state.subtotal - state.items.find(item => item.id === itemIdToDecrease).price;\n      return { ...state,\n        items: decreasedItems,\n        subtotal: decreasedSubtotal\n      };\n\n    case \"INCREASE_QUANTITY\":\n      // Increase the quantity of the item with the corresponding itemId by 1\n      const itemIdToIncrease = action.payload;\n      const increasedItems = state.items.map(item => {\n        if (item.id === itemIdToIncrease) {\n          return { ...item,\n            quantity: item.quantity + 1\n          };\n        } else {\n          return item;\n        }\n      });\n      const increasedSubtotal = state.subtotal + state.items.find(item => item.id === itemIdToIncrease).price;\n      return { ...state,\n        items: increasedItems,\n        subtotal: increasedSubtotal\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst store = configureStore({\n  reducer: {\n    cart: cartReducer\n  }\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/Graham family/Desktop/Junk General/junk-general/src/cart/CartStore.js"],"names":["configureStore","initialState","items","subtotal","length","increaseQuantity","itemId","type","payload","decreaseQuantity","cartReducer","state","action","newItem","existingItem","find","item","id","updatedItems","map","quantity","updatedSubtotal","price","itemIdToRemove","filteredItems","filter","updatedTotal","itemIdToDecrease","decreasedItems","decreasedSubtotal","itemIdToIncrease","increasedItems","increasedSubtotal","store","reducer","cart"],"mappings":"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","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  subtotal: 0,\r\n  length: 0\r\n};\r\n\r\nexport function increaseQuantity(itemId) {\r\n  return { type: \"INCREASE_QUANTITY\", payload: itemId };\r\n}\r\n\r\nexport function decreaseQuantity(itemId) {\r\n  return { type: \"DECREASE_QUANTITY\", payload: itemId };\r\n}\r\n\r\nfunction cartReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"ADD_ITEM\":\r\n      // Add the item to the cart items array and update the subtotal\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      if (existingItem) {\r\n        // If the item already exists, update its quantity and subtotal\r\n        const updatedItems = state.items.map((item) => {\r\n          if (item.id === existingItem.id) {\r\n            return { ...item, quantity: item.quantity + 1 };\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        const updatedSubtotal = state.subtotal + existingItem.price;\r\n        return { ...state, items: updatedItems, subtotal: updatedSubtotal };\r\n      } else {\r\n        // If the item doesn't exist, add it to the cart items array and update the subtotal\r\n        const updatedItems = [...state.items, newItem];\r\n        const updatedSubtotal = state.subtotal + newItem.price;\r\n        return { ...state, items: updatedItems, subtotal: updatedSubtotal };\r\n      }\r\n\r\n    case \"REMOVE_ITEM\":\r\n      // Remove the item from the cart items array and update the subtotal\r\n      const itemIdToRemove = action.payload;\r\n      const filteredItems = state.items.filter(\r\n        (item) => item.id !== itemIdToRemove\r\n      );\r\n      const updatedTotal =\r\n        state.subtotal -\r\n        state.items.find((item) => item.id === itemIdToRemove).price;\r\n      return { ...state, items: filteredItems, subtotal: updatedTotal };\r\n\r\n    case \"DECREASE_QUANTITY\":\r\n      // Decrease the quantity of the item with the corresponding itemId by 1\r\n      const itemIdToDecrease = action.payload;\r\n      const decreasedItems = state.items.map((item) => {\r\n        if (item.id === itemIdToDecrease && item.quantity > 1) {\r\n          return { ...item, quantity: item.quantity - 1 };\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n      const decreasedSubtotal =\r\n        state.subtotal -\r\n        state.items.find((item) => item.id === itemIdToDecrease).price;\r\n      return { ...state, items: decreasedItems, subtotal: decreasedSubtotal };\r\n\r\n    case \"INCREASE_QUANTITY\":\r\n      // Increase the quantity of the item with the corresponding itemId by 1\r\n      const itemIdToIncrease = action.payload;\r\n      const increasedItems = state.items.map((item) => {\r\n        if (item.id === itemIdToIncrease) {\r\n          return { ...item, quantity: item.quantity + 1 };\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n      const increasedSubtotal =\r\n        state.subtotal +\r\n        state.items.find((item) => item.id === itemIdToIncrease).price;\r\n      return { ...state, items: increasedItems, subtotal: increasedSubtotal };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    cart: cartReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}