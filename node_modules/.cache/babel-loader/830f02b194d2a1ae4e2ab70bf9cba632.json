{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  items: [],\n  subtotal: 0,\n  length: 0\n};\nexport function increaseQuantity(itemId) {\n  return {\n    type: \"INCREASE_QUANTITY\",\n    payload: itemId\n  };\n}\nexport function decreaseQuantity(itemId) {\n  return {\n    type: \"DECREASE_QUANTITY\",\n    payload: itemId\n  };\n}\n\nfunction cartReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      // Add the item to the cart items array and update the subtotal and length\n      const newItem = action.payload;\n      const existingItemIndex = state.items.findIndex(item => item.id === newItem.id);\n\n      if (existingItemIndex >= 0) {\n        const existingItem = state.items[existingItemIndex];\n        const updatedItems = [...state.items];\n        updatedItems[existingItemIndex] = { ...existingItem,\n          quantity: existingItem.quantity + newItem.quantity\n        };\n        const updatedSubtotal = state.subtotal + newItem.price * newItem.quantity;\n        const updatedLength = state.length + newItem.quantity;\n        return { ...state,\n          items: updatedItems,\n          subtotal: updatedSubtotal,\n          length: updatedLength\n        };\n      } else {\n        const updatedItems = [...state.items, newItem];\n        const updatedSubtotal = state.subtotal + newItem.price * newItem.quantity;\n        const updatedLength = state.length + newItem.quantity;\n        return { ...state,\n          items: updatedItems,\n          subtotal: updatedSubtotal,\n          length: updatedLength\n        };\n      }\n\n    case \"REMOVE_ITEM\":\n      const itemIdToRemove = action.payload;\n      const itemToRemove = state.items.find(item => item.id === itemIdToRemove);\n      const filteredItems = state.items.filter(item => item.id !== itemIdToRemove);\n      const updatedSubtotal = state.subtotal - itemToRemove.price * itemToRemove.quantity;\n      const updatedLength = state.length - itemToRemove.quantity;\n      return { ...state,\n        items: filteredItems,\n        subtotal: updatedSubtotal,\n        length: updatedLength\n      };\n\n    case \"DECREASE_QUANTITY\":\n      const itemIdToDecrease = action.payload;\n      const itemToDecrease = state.items.find(item => item.id === itemIdToDecrease);\n      const decreasedItems = state.items.map(item => {\n        if (item.id === itemIdToDecrease && item.quantity > 1) {\n          return { ...item,\n            quantity: item.quantity - 1\n          };\n        } else {\n          return item;\n        }\n      });\n      const decreasedSubtotal = state.subtotal - itemToDecrease.price;\n      const decreasedLength = state.length - 1;\n      return { ...state,\n        items: decreasedItems,\n        subtotal: decreasedSubtotal,\n        length: decreasedLength\n      };\n\n    case \"INCREASE_QUANTITY\":\n      const itemIdToIncrease = action.payload;\n      const itemToIncrease = state.items.find(item => item.id === itemIdToIncrease);\n      const increasedItems = state.items.map(item => {\n        if (item.id === itemIdToIncrease) {\n          return { ...item,\n            quantity: item.quantity + 1\n          };\n        } else {\n          return item;\n        }\n      });\n      const increasedSubtotal = state.subtotal + itemToIncrease.price;\n      const increasedLength = state.length + 1;\n      return { ...state,\n        items: increasedItems,\n        subtotal: increasedSubtotal,\n        length: increasedLength\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst store = configureStore({\n  reducer: {\n    cart: cartReducer\n  }\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/Graham family/Desktop/Junk General/junk-general/src/cart/CartStore.js"],"names":["configureStore","initialState","items","subtotal","length","increaseQuantity","itemId","type","payload","decreaseQuantity","cartReducer","state","action","newItem","existingItemIndex","findIndex","item","id","existingItem","updatedItems","quantity","updatedSubtotal","price","updatedLength","itemIdToRemove","itemToRemove","find","filteredItems","filter","itemIdToDecrease","itemToDecrease","decreasedItems","map","decreasedSubtotal","decreasedLength","itemIdToIncrease","itemToIncrease","increasedItems","increasedSubtotal","increasedLength","store","reducer","cart"],"mappings":"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","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  subtotal: 0,\r\n  length: 0,\r\n};\r\n\r\nexport function increaseQuantity(itemId) {\r\n  return { type: \"INCREASE_QUANTITY\", payload: itemId };\r\n}\r\n\r\nexport function decreaseQuantity(itemId) {\r\n  return { type: \"DECREASE_QUANTITY\", payload: itemId };\r\n}\r\n\r\nfunction cartReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"ADD_ITEM\":\r\n      // Add the item to the cart items array and update the subtotal and length\r\n      const newItem = action.payload;\r\n      const existingItemIndex = state.items.findIndex(item => item.id === newItem.id);\r\n      if (existingItemIndex >= 0) {\r\n        const existingItem = state.items[existingItemIndex];\r\n        const updatedItems = [...state.items];\r\n        updatedItems[existingItemIndex] = {\r\n          ...existingItem,\r\n          quantity: existingItem.quantity + newItem.quantity\r\n        };\r\n        const updatedSubtotal = state.subtotal + (newItem.price * newItem.quantity);\r\n        const updatedLength = state.length + newItem.quantity;\r\n        return { ...state, items: updatedItems, subtotal: updatedSubtotal, length: updatedLength };\r\n      } else {\r\n        const updatedItems = [...state.items, newItem];\r\n        const updatedSubtotal = state.subtotal + (newItem.price * newItem.quantity);\r\n        const updatedLength = state.length + newItem.quantity;\r\n        return { ...state, items: updatedItems, subtotal: updatedSubtotal, length: updatedLength };\r\n      }\r\n\r\n    case \"REMOVE_ITEM\":\r\n      const itemIdToRemove = action.payload;\r\n      const itemToRemove = state.items.find(\r\n        (item) => item.id === itemIdToRemove\r\n      );\r\n      const filteredItems = state.items.filter(\r\n        (item) => item.id !== itemIdToRemove\r\n      );\r\n      const updatedSubtotal =\r\n        state.subtotal - itemToRemove.price * itemToRemove.quantity;\r\n      const updatedLength = state.length - itemToRemove.quantity;\r\n      return {\r\n        ...state,\r\n        items: filteredItems,\r\n        subtotal: updatedSubtotal,\r\n        length: updatedLength,\r\n      };\r\n\r\n    case \"DECREASE_QUANTITY\":\r\n      const itemIdToDecrease = action.payload;\r\n      const itemToDecrease = state.items.find(\r\n        (item) => item.id === itemIdToDecrease\r\n      );\r\n      const decreasedItems = state.items.map((item) => {\r\n        if (item.id === itemIdToDecrease && item.quantity > 1) {\r\n          return { ...item, quantity: item.quantity - 1 };\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n      const decreasedSubtotal = state.subtotal - itemToDecrease.price;\r\n      const decreasedLength = state.length - 1;\r\n      return {\r\n        ...state,\r\n        items: decreasedItems,\r\n        subtotal: decreasedSubtotal,\r\n        length: decreasedLength,\r\n      };\r\n\r\n    case \"INCREASE_QUANTITY\":\r\n      const itemIdToIncrease = action.payload;\r\n      const itemToIncrease = state.items.find(\r\n        (item) => item.id === itemIdToIncrease\r\n      );\r\n      const increasedItems = state.items.map((item) => {\r\n        if (item.id === itemIdToIncrease) {\r\n          return { ...item, quantity: item.quantity + 1 };\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n      const increasedSubtotal = state.subtotal + itemToIncrease.price;\r\n      const increasedLength = state.length + 1;\r\n      return {\r\n        ...state,\r\n        items: increasedItems,\r\n        subtotal: increasedSubtotal,\r\n        length: increasedLength,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    cart: cartReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}